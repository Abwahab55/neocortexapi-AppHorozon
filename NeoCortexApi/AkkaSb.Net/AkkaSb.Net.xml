<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AkkaSb.Net</name>
    </assembly>
    <members>
        <member name="M:AkkaSb.Net.ActorBase.UnrouteedMessage">
            <summary>
            Invoked if the actor receives the message, which cannot be dispatched.
            </summary>
        </member>
        <member name="M:AkkaSb.Net.ActorBase.Activated">
            <summary>
            Invoked when the actor is activated.
            </summary>
        </member>
        <member name="M:AkkaSb.Net.ActorBase.DeActivated">
            <summary>
            Invoked when actor is deactivated.
            </summary>
        </member>
        <member name="M:AkkaSb.Net.ActorBase.Receive``1(System.Func{``0,System.Object})">
            <summary>
            You must invoke this method to register the reciever handler.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="handler"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AkkaSb.Net.ActorReference.Ask``1(System.Object,System.Nullable{System.TimeSpan},System.String)" -->
        <member name="M:AkkaSb.Net.ActorReference.Tell(System.Object,System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Sends the 'fire and forget' message to the remote actor without of waiting on a response.
            </summary>
            <param name="msg">The message to be sent. Any serializable object.</param>
            <param name="timeout"></param>
            <param name="routeToNode">If specified, message is routed directly to specified node.</param>
            <returns></returns>
        </member>
        <member name="M:AkkaSb.Net.ActorReference.CreateMessage(System.Object,System.Boolean,System.Type,AkkaSb.Net.ActorId,System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="expectResponse"></param>
            <param name="actorType"></param>
            <param name="actorId"></param>
            <param name="node">If specified, message is routed directly to that node. Node will listen on subscription
            rule [node LIKE %node%]</param>
            <returns></returns>
        </member>
        <member name="P:AkkaSb.Net.ActorSbConfig.ReplyMsgQueue">
            <summary>
            Queue used to receive reply messages send as responses from actor operations.
            Sender of th emessage appends this queue name, so the receiver knows where to send reply the message.
            </summary>
        </member>
        <member name="P:AkkaSb.Net.ActorSbConfig.RequestMsgTopic">
            <summary>
            Messages sent to invoke operations on actors. ActorSystem registers a session receivers
            on this topic.
            </summary>
        </member>
        <member name="P:AkkaSb.Net.ActorSbConfig.RequestSubscriptionName">
            <summary>
            The name of subscription, which will receive messages on topic.
            </summary>
        </member>
        <member name="P:AkkaSb.Net.ActorSbConfig.ConnectionTimeout">
            <summary>
            Connection timeout of Ask() method.
            </summary>
        </member>
        <member name="P:AkkaSb.Net.ActorSbConfig.BatchSize">
            <summary>
            Number partitions, which will be concurrentlly dispatched for calculation.
            </summary>
        </member>
        <member name="P:AkkaSb.Net.ActorSbConfig.NumOfElementsPerPartition">
            <summary>
            
            </summary>
        </member>
        <member name="P:AkkaSb.Net.ActorSbConfig.NumOfPartitions">
            <summary>
            Should be uniformly distributed across nodes. It cannot be less than number of nodes.
            </summary>
        </member>
        <member name="P:AkkaSb.Net.ActorSbConfig.Nodes">
            <summary>
            List of nodes in Actor SB cluster. ENtries in the list defines names of SB subscriptions.
            Every node in this list connects to its subscription. RequestSubscriptionName is one of entries in this list.
            If the list is empty system assumes that a single 'default' subscription exists.
            In this case all nodes in cluster connects to same subscription.
            </summary>
        </member>
        <member name="F:AkkaSb.Net.ActorSystem.subscriptionName">
            <summary>
            The name of subscription where to listen messages.
            </summary>
        </member>
        <member name="P:AkkaSb.Net.ActorSystem.PersistenceProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:AkkaSb.Net.ActorSystem.GetActorIdFromSession(System.String)">
            <summary>
            SessionId = "Actor Type Name/ActorId"
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
    </members>
</doc>
