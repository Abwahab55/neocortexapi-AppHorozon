<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DistributedComputeLib</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "P:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.ActorMap" -->
        <member name="P:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Config">
            <summary>
            Actor cluster configuration.
            </summary>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.HtmConfig">
            <summary>
            Configuration used to initialize HTM calculus in actor.
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.#ctor(AkkaSb.Net.ActorSbConfig,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates all required actors, which host partitions.
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.InitPartitionActorsDist">
            <summary>
            Creates partition actors on cluster.
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.CreatePartitionMap(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Calculates partition placements on nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.GetPartitionActorFromKey(System.Int32)">
            <summary>
            Depending on usage (Key type) different mechanism can be used to partition keys.
            This method returns the index of the node, whish should hold specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Item(System.Int32)">
            <summary>
            Gets partitions (nodes) with assotiated indexes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.AddOrUpdate(System.Collections.Generic.ICollection{NeoCortexApi.Entities.KeyPair})">
            <summary>
            Adds/Updates batch of elements to remote nodes.
            </summary>
            <param name="keyValuePairs"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.InitializeColumnPartitionsDist(System.Collections.Generic.ICollection{NeoCortexApi.Entities.KeyPair})">
            <summary>
            Adds/Updates batch of elements to remote nodes.
            </summary>
            <param name="keyValuePairs"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.RunBatched(System.Action{System.Collections.Generic.List{NeoCortexApi.DistributedComputeLib.Placement{System.Int32}}},System.Collections.Generic.List{NeoCortexApi.DistributedComputeLib.Placement{System.Int32}},System.Int32)">
            <summary>
            TODO to be added
            </summary>
            <param name="func"></param>
            <param name="list"></param>
            <param name="batchSize"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.ConnectAndConfigureInputsDist(NeoCortexApi.Entities.HtmConfig)">
            <summary>
            Performs remote initialization and configuration of all coulmns in all partitions.
            </summary>
            <param name="htmConfig"></param>
            <returns>List of average spans of all columns on this node in this partition.
            This list is agreggated by caller to estimate average span for all system.</returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.CalculateOverlapDist(System.Int32[])">
            <summary>
            TODO to be added
            </summary>
            <param name="inputVector"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.AdaptSynapsesDist(System.Int32[],System.Double[],System.Int32[])">
            <summary>
            TODO to be added
            </summary>
            <param name="inputVector"></param>
            <param name="permChanges"></param>
            <param name="activeColumns"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.BumpUpWeakColumnsDist(System.Int32[])">
            <summary>
            TODO to be added
            </summary>
            <param name="weakColumns"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.GetPartitionsForKeyset(System.Collections.Generic.ICollection{NeoCortexApi.Entities.KeyPair})">
            <summary>
            Groups keys by partitions (actors).
            </summary>
            <param name="keyValuePairs"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Add(System.Collections.Generic.KeyValuePair{System.Int32,`0})">
            <summary>
            Ads the value with specified keypair.
            </summary>
            <param name="item">Keypair of the new item.</param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Add(System.Int32,`0)">
            <summary>
            Adds the value with secified key to the right parition.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.TryGetValue(System.Int32,`0@)">
            <summary>
            Tries to return value from target partition.
            </summary>
            <param name="key"></param>
            <param name="value"></param>time
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Clear">
            <summary>
            TODO to be added
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Contains(System.Collections.Generic.KeyValuePair{System.Int32,`0})">
            <summary>
            TODO to be added
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.ContainsKey(System.Int32)">
            <summary>
            Checks if element with specified key exists in any partition in cluster.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.CopyTo(System.Collections.Generic.KeyValuePair{System.Int32,`0}[],System.Int32)">
            <summary>
            TODO to be added
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Remove(System.Int32)">
            <summary>
            TODO to be added
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Remove(System.Collections.Generic.KeyValuePair{System.Int32,`0})">
            <summary>
            TODO to be added
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            TODO to be added
            </summary>
            <returns></returns>
        </member>
        <member name="F:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.currentDictIndex">
            <summary>
            Current dictionary list in enemerator.
            </summary>
        </member>
        <member name="F:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.currentIndex">
            <summary>
            Current index in currentdictionary
            </summary>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Current">
            <summary>
            TODO to be added
            </summary>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.System#Collections#Generic#IEnumerator{System#Collections#Generic#KeyValuePair{System#Int32,TValue}}#Current">
            <summary>
            TODO to be added
            </summary>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Nodes">
            <summary>
            Gets number of physical nodes in cluster.
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.GetEnumerator">
            <summary>
            TODO to be added
            </summary>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.MoveNext">
            <summary>
            TODO to be added
            </summary>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Reset">
            <summary>
            TODO to be added
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.Dispose">
            <summary>
            TODO to be added
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.ActorSbDistributedDictionaryBase`1.GetObjects(System.Int32[])">
             <summary>
            
             </summary>
             <param name="keys">All keys must belong to same partition. Search object (caller of this method)
             should sot keys </param>
             <returns></returns>
             TODO Unreachable code ??
        </member>
        <member name="F:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.m_ActorMap">
            <summary>
            List of actors, which hold partitions.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.ActorMap" -->
        <member name="P:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.Config">
            <summary>
            Akka cluster configuration.
            </summary>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.HtmConfig">
            <summary>
            Configuration used to initialize HTM actor.
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.#ctor(System.Object,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates all required actors, which host partitions.
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.InitPartitionActorsDist">
            <summary>
            Creates partition actors on cluster.
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.CreatePartitionMap">
            <summary>
            Calculates partition placements on nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.GetPartitionActorFromKey(`0)">
            <summary>
            Depending on usage (Key type) different mechanism can be used to partition keys.
            This method returns the index of the node, whish should hold specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.Item(`0)">
            <summary>
            Gets partitions (nodes) with assotiated indexes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.AddOrUpdate(System.Collections.Generic.ICollection{NeoCortexApi.Entities.KeyPair})">
            <summary>
            Adds/Updates batch of elements to remote nodes.
            </summary>
            <param name="keyValuePairs"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.InitializeColumnPartitionsDist(System.Collections.Generic.ICollection{NeoCortexApi.Entities.KeyPair})">
            <summary>
            Adds/Updates batch of elements to remote nodes.
            </summary>
            <param name="keyValuePairs"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.ConnectAndConfigureInputsDist(NeoCortexApi.Entities.HtmConfig)">
            <summary>
            Performs remote initialization and configuration of all coulms in all partitions.
            </summary>
            <param name="htmConfig"></param>
            <returns>List of average spans of all columns on this node in this partition.
            This list is agreggated by caller to estimate average span for all system.</returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.GetPartitionsForKeyset(System.Collections.Generic.ICollection{NeoCortexApi.Entities.KeyPair})">
            <summary>
            Gets list of partitions, which host specified keys.
            </summary>
            <param name="keyValuePairs">Keyvalue pairs.</param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.GetPartitionsByNode">
            <summary>
            Gets partitions grouped by nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Ads the value with specified keypair.
            </summary>
            <param name="item">Keypair of the new item.</param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.Add(`0,`1)">
            <summary>
            Ads the value with secified key to the right parition.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.TryGetValue(`0,`1@)">
            <summary>
            Tries to return value from target partition.
            </summary>
            <param name="key"></param>
            <param name="value"></param>time
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.ContainsKey(`0)">
            <summary>
            Checks if element with specified key exists in any partition in cluster.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="F:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.currentDictIndex">
            <summary>
            Current dictionary list in enemerator.
            </summary>
        </member>
        <member name="F:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.currentIndex">
            <summary>
            Current index in currentdictionary
            </summary>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.Nodes">
            <summary>
            Gets number of physical nodes in cluster.
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictionaryBase`2.GetObjects(`0[])">
             <summary>
            
             </summary>
             <param name="keys">All keys must belong to same partition. Search object (caller of this method)
             should sot keys </param>
             <returns></returns>
             TODO Unreachable code ??
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DictNodeActor.InitializeColumns(NeoCortexApi.DistributedComputeLib.InitColumnsMsg)">
            <summary>
            Creates columns on the node.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DictNodeActor.CreateAndConnectColumns(NeoCortexApi.DistributedComputeLib.ConnectAndConfigureColumnsMsg)">
            <summary>
            Initialize all columns inside of partition and connect them to sensory input.
            It returns the average connected span of the partition.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers">
            <summary>
            Utilities to match some of the functionality found in Python's Numpy.
            </summary>
            <remarks>
            Author: David Ray
            </remarks>
        </member>
        <member name="F:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.EMPTY_ARRAY">
            <summary>
            Empty array constant
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Product(System.Int32[])">
            <summary>
            Returns the product of each integer in the specified array.
            </summary>
            <param name="dims"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.ToIntArray(NeoCortexApi.Entities.IDistributedArray)">
            <summary>
            Returns an array with the same shape and the contents converted to integers.
            </summary>
            <param name="doubs">an array of doubles.</param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.ToDoubleArray(NeoCortexApi.Entities.IDistributedArray)">
            <summary>
            Returns an array with the same shape and the contents converted to doubles.
            </summary>
            <param name="ints">an array of ints.</param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Modulo(System.Int32,System.Int32)">
            <summary>
            Performs a modulus operation in Python style.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Modulo(System.Int32[],System.Int32)">
            <summary>
            Performs a modulus on every index of the first argument using the second argument and places the result in the same index of
            the first argument.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Maximum(System.Double[],System.Double)">
            <summary>
            Returns a double array whose values are the maximum of the value in the array and the max value argument.
            </summary>
            <param name="doubs"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.MaxBetween(System.Int32[],System.Int32[])">
            <summary>
            Returns an array of identical shape containing the maximum of the values between each corresponding index. Input arrays
            must be the same length.
            </summary>
            <param name="arr1"></param>
            <param name="arr2"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.MinBetween(System.Int32[],System.Int32[])">
            <summary>
            Returns an array of identical shape containing the minimum of the values between each corresponding index. Input arrays
            must be the same length.
            </summary>
            <param name="arr1"></param>
            <param name="arr2"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Divide(System.Double[],System.Double[],System.Double,System.Double)">
            <summary>
            Returns an array whose members are the quotient of the dividend array values and the divisor array values.
            </summary>
            <param name="dividend"></param>
            <param name="divisor"></param>
            <param name="dividendAdjustment"></param>
            <param name="divisorAdjustment"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Throws if the two argument arrays are not the same length</exception>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Divide(System.Int32[],System.Int32[])">
            <summary>
            Returns an array whose members are the quotient of the dividend array values and the divisor array values.
            </summary>
            <param name="dividend"></param>
            <param name="divisor"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Throws if the two argument arrays are not the same length
            .</exception>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Divide(System.Double[],System.Double)">
            <summary>
            Returns an array whose members are the quotient of the dividend array values and the divisor value.
            </summary>
            <param name="dividend"></param>
            <param name="divisor"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Multiply(System.Double[],System.Double[],System.Double,System.Double)">
            <summary>
            Returns an array whose members are the product of the multiplicand array
            values and the factor array values.
            </summary>
            <param name="multiplicand"></param>
            <param name="factor"></param>
            <param name="multiplicandAdjustment"></param>
            <param name="factorAdjustment"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Throws if the two argument arrays are not the same length.</exception>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.IndexWhere2``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Gets index of item in array, which satisfies specified condition.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Multiply(System.Double[],System.Int32[])">
            <summary>
            Returns an array whose members are the product of the multiplicand array values and the factor array values.
            </summary>
            <param name="multiplicand"></param>
            <param name="factor"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Throws if the two argument arrays are not the same length.</exception>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Multiply(System.Int32[],System.Int32)">
            <summary>
            Returns a new array containing the result of multiplying each index of the specified array by the 2nd parameter.
            </summary>
            <param name="array"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Multiply(System.Double[],System.Double)">
            <summary>
            Returns a new array containing the result of multiplying each index of the specified array by the 2nd parameter.
            </summary>
            <param name="array"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Subtract(System.Int32[],System.Int32[])">
            <summary>
            Returns an integer array containing the result of subtraction operations between corresponding indexes of the specified arrays.
            </summary>
            <param name="minuend"></param>
            <param name="subtrahend"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Average(System.Int32[])">
            <summary>
            Returns the average of all the specified array contents.
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Average(System.Double[])">
            <summary>
            Returns the average of all the specified array contents.
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Variance(System.Double[],System.Double)">
            <summary>
            Computes and returns the variance.
            </summary>
            <param name="arr"></param>
            <param name="mean"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Variance(System.Double[])">
            <summary>
            Computes and returns the variance.
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Add(System.Int32[],System.Int32)">
            <summary>
            Returns the passed in array with every value being altered by the addition of the specified amount.
            </summary>
            <param name="arr"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.IntAdd(System.Int32[],System.Int32[])">
            <summary>
            Returns the passed in array with every value being altered by the addition of the specified double amount at the same index.
            </summary>
            <param name="arr"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.DoubleAdd(System.Double[],System.Double[])">
            <summary>
            Returns the passed in array with every value being altered by the addition of the specified double amount at the same index.
            </summary>
            <param name="arr"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.DoubleAdd(System.Double[],System.Double)">
            <summary>
            Returns the passed in array with every value being altered by the addition of the specified double amount
            </summary>
            <param name="arr"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Sum(System.Int32[])">
            <summary>
            Returns the sum of all contents in the specified array.
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Sum(System.Double[])">
            <summary>
            Returns the sum of all contents in the specified array.
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.PositiveRemainder(System.Double,System.Double)">
            <summary>
            Another utility to account for the difference between Python and Java.
            Here the modulo operator is defined differently.
            </summary>
            <param name="n"></param>
            <param name="divisor"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Range(System.Int32,System.Int32)">
            <summary>
            Returns an array which starts from lowerBounds (inclusive) and ends at the upperBounds (exclusive).
            </summary>
            <param name="lowerBounds"></param>
            <param name="upperBounds"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Shuffle(System.Int32[])">
            <summary>
            Fisher-Yates implementation which shuffles the array contents.
            </summary>
            <param name="array">the array of ints to shuffle.</param>
            <returns>shuffled array</returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Replace(System.Int32,System.Int32,System.Int32[],System.Int32[])">
            <summary>
            Replaces the range specified by "start" and "end" of "orig" with the 
            array of replacement ints found in "replacement".
            </summary>
            <param name="start">start index of "orig" to be replaced</param>
            <param name="end">end index of "orig" to be replaced</param>
            <param name="orig">the array containing entries to be replaced by "replacement"</param>
            <param name="replacement">the array of ints to put in "orig" in the indicated indexes</param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Unique(System.Int32[])">
            <summary>
            Returns a sorted unique (dupicates removed) array of integers
            </summary>
            <param name="nums">an unsorted array of integers with possible duplicates.</param>
            <returns></returns>
        </member>
        <member name="T:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.CoordinateAssembler">
            <summary>
            Helper Class for recursive coordinate assembling
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.DimensionsToCoordinateList(System.Collections.Generic.List{System.Int32[]})">
            <summary>
            Called to merge a list of dimension arrays into a sequential row-major indexed list of coordinates.
            </summary>
            <param name="dimensions">a list of dimension arrays, each array being a dimension of an n-dimensional array.</param>
            <returns>a list of n-dimensional coordinates in row-major format.</returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.SetIndexesTo(System.Double[],System.Int32[],System.Double)">
            <summary>
            Sets the values in the specified values array at the indexes specified, to the value "setTo".
            </summary>
            <param name="values">the values to alter if at the specified indexes.</param>
            <param name="indexes">the indexes of the values array to alter</param>
            <param name="setTo">the value to set at the specified indexes.</param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.SetIndexesTo(System.Int32[],System.Int32[],System.Int32)">
            <summary>
            Sets the values in the specified values array at the indexes specified, to the value "setTo".
            </summary>
            <param name="values">the values to alter if at the specified indexes.</param>
            <param name="indexes">the indexes of the values array to alter</param>
            <param name="setTo">the value to set at the specified indexes.</param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.SetRangeTo(System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the values in range start to stop to the value specified. If
            stop &lt; 0, then stop indicates the number of places counting from the
            length of "values" back.
            </summary>
            <param name="values">the array to alter</param>
            <param name="start">the start index (inclusive)</param>
            <param name="stop">the end index (exclusive)</param>
            <param name="setTo">the value to set the indexes to</param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Sample(System.Int32[],System.Int32[],System.Random)">
             Returns a random, sorted, and  unique array of the specified sample size of
             selections from the specified list of choices.
            
             @param sampleSize the number of selections in the returned sample
             @param choices    the list of choices to select from
             @param random     a random number generator
             @return a sample of numbers of the specified size
            <summary>
            
            
            </summary>
            <param name="choices">the list of choices to select from</param>
            <param name="selectedIndices"></param>
            <param name="random">a random number generator</param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Sample(System.Int32,System.Random)">
            <summary>
            Returns a double[] filled with random doubles of the specified size.
            </summary>
            <param name="sampleSize"></param>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Clip(System.Double[],System.Double,System.Double)">
            <summary>
            Ensures that each entry in the specified array has a min value equal to or greater than the specified min and a maximum value less
            than or equal to the specified max. For example, if min = 0, then negative permanence values will be rounded to 0. Similarly, high 
            permanences will be rounded by maximal value.
            </summary>
            <param name="values">the values to clip</param>
            <param name="min">the minimum value</param>
            <param name="max">the maximum value</param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Clip(System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Ensures that each entry in the specified array has a min value
            equal to or greater than the min at the specified index and a maximum value less
            than or equal to the max at the specified index.
            </summary>
            <param name="values">the values to clip</param>
            <param name="min">the minimum value</param>
            <param name="max">the maximum value</param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Clip(System.Int32[],System.Int32[],System.Int32)">
            <summary>
            Ensures that each entry in the specified array has a min value
            equal to or greater than the min at the specified index and a maximum value less
            than or equal to the max at the specified index.
            </summary>
            <param name="values">the values to clip</param>
            <param name="max">the minimum value</param>
            <param name="adj">the adjustment amount</param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.ValueGreaterCount(System.Double,System.Double[])">
            <summary>
            Returns the count of values in the specified array that are greater than the specified compare value
            </summary>
            <param name="compare">the value to compare to</param>
            <param name="array">the values being compared</param>
            <returns>the count of values greater</returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.ValueGreaterOrEqualCount(System.Double,System.Double[])">
            <summary>
            Returns the count of values in the specified array that are greater than or equal to, the specified compare value.
            </summary>
            <param name="compare">the value to compare to</param>
            <param name="array">the values being compared</param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.ValueGreaterCountAtIndex(System.Double,System.Double[],System.Int32[])">
            <summary>
            Returns the number of values at the the specified indexes in the specified array that are greater than the specified 'compare' value.
            </summary>
            <param name="compare">the value to compare to</param>
            <param name="array">the values being compared</param>
            <param name="indexes"></param>
            <returns>the count of values greater</returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.N_Greatest(System.Double[],System.Int32)">
            <summary>
            Returns an array containing the n greatest values.
            </summary>
            <param name="array"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.RaiseValuesBy(System.Double,System.Double[])">
            <summary>
            Raises the values in the specified array by the amount specified.
            </summary>
            <param name="amount">the amount to raise the values</param>
            <param name="values">the values to raise</param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.RaiseValuesBy(System.Double,System.Double[],System.Int32[])">
            <summary>
            Raises the values at the indexes specified by the amount specified.
            </summary>
            <param name="amount">the amount to raise the values</param>
            <param name="values">the values to raise</param>
            <param name="indexesToRaise"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.RaiseValuesBy(System.Double[],System.Double[])">
            <summary>
            Raises the values at the indexes specified by the amount specified.
            </summary>
            <param name="amounts">the amounts to raise the values</param>
            <param name="values">the values to raise</param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.RaiseValuesBy(System.Int32,System.Int32[],System.Int32[])">
            <summary>
            Raises the values at the indicated indexes, by the amount specified
            </summary>
            <param name="amount"></param>
            <param name="indexes"></param>
            <param name="values"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.IsSparse(System.Int32[])">
            <summary>
            Returns a flag indicating whether the specified array is a sparse array of 0's and 1's or not.
            </summary>
            <param name="ia"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.LessThanOrEqualXThanSetToY(NeoCortexApi.Entities.IDistributedArray,System.Double,System.Double)">
            <summary>
            Makes all values in the specified array which are less than or equal to the specified
            "x" value, equal to the specified "y".
            </summary>
            <param name="array"></param>
            <param name="x">the comparison</param>
            <param name="y">the value to set if the comparison fails</param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.LessThanXThanSetToY(NeoCortexApi.Entities.IDistributedArray,System.Double,System.Double)">
            <summary>
            Makes all values in the specified array which are less than the specified "x" value, equal to the specified "y".
            </summary>
            <param name="array"></param>
            <param name="x">the comparison</param>
            <param name="y">the value to set if the comparison fails</param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.GreaterThanXThanSetToYInB(NeoCortexApi.Entities.IDistributedArray,NeoCortexApi.Entities.IDistributedArray,System.Int32,System.Double)">
            <summary>
            Sets value to "y" in "targetB" if the value in the same index in "sourceA" is bigger than "x".
            </summary>
            <param name="sourceA">array to compare elements with X</param>
            <param name="targetB">array to set elements to Y</param>
            <param name="x">the comparison</param>
            <param name="y">the value to set if the comparison fails</param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Max(System.Int32[])">
            <summary>
            Returns the maximum value in the specified array
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Max(System.Double[])">
            <summary>
            Returns the maximum value in the specified array
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.ListOfValuesByIndicies(System.Double[],System.Int32[])">
            <summary>
            Returns a new array containing the items specified from the source array by the indexes specified.
            </summary>
            <param name="source"></param>
            <param name="indexes"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Sub(System.Int32[],System.Int32[])">
            <summary>
            Returns a new array containing the items specified from the source array by the indexes specified.
            </summary>
            <param name="source"></param>
            <param name="indexes"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Sub(System.Int32[][],System.Int32[])">
            <summary>
            Returns a new 2D array containing the items specified from the source array by the indexes specified.
            </summary>
            <param name="source"></param>
            <param name="indexes"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.MinInt(NeoCortexApi.Entities.IDistributedArray)">
            <summary>
            Returns the minimum value in the specified array
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.MinDouble(NeoCortexApi.Entities.IDistributedArray)">
            <summary>
            Returns the minimum value in the specified array
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Reverse(System.Int32[])">
            <summary>
            Returns a copy of the specified integer array in reverse order
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Reverse(System.Double[])">
            <summary>
            Returns a copy of the specified double array in reverse order
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Or(System.Int32[],System.Int32[])">
            <summary>
            Returns a new int array containing the or'd on bits of both arg1 and arg2.
            </summary>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.And(System.Int32[],System.Int32[])">
            <summary>
            Returns a new int array containing the and'd bits of both arg1 and arg2.
            </summary>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Tail(System.Int32[])">
            <summary>
            Copies the passed array <c>original</c>  into a new array except first element and returns it
            </summary>
            <param name="original">the array from which a tail is taken</param>
            <returns>a new array containing the tail from the original array</returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.SetValue(NeoCortexApi.Entities.IDistributedArray,System.Int32,System.Int32[])">
            <summary>
            Set <c>value</c> for <c>array</c> at specified position <tt>indexes</tt>
            </summary>
            <param name="array"></param>
            <param name="value"></param>
            <param name="indexes"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.GetValue(System.Array,System.Int32[])">
            <summary>
            Get <c>value</c> for <c>array</c> at specified position <c>indexes</c>
            </summary>
            <param name="array"></param>
            <param name="indexes"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.FillArray(System.Object,System.Int32)">
            <summary>
            Assigns the specified int value to each element of the specified any dimensional array of ints.
            </summary>
            <param name="array"></param>
            <param name="value"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.Fill(System.Array,System.Object)">
            <summary>
            Fills the array with specified value.
            </summary>
            <param name="array"></param>
            <param name="value"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.GetRow``1(NeoCortexApi.Entities.IDistributedArray,System.Int32)">
            <summary>
            Gets the access to a row inside of multidimensional array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.GetRowNotUsed``1(``0[0:,0:],System.Int32)">
            <summary>
            Gets the access to a row inside of multidimensional array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.DistributedArrayHelpers.AreEqual``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})">
             Concat int arrays
            
             @return The concatenated array
            
             http://stackoverflow.com/a/784842
        </member>
        <member name="T:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictConfig">
            <summary>
            Defines the confguration of Akka Cluster.
            </summary>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictConfig.ConnectionTimeout">
            <summary>
            Time to wait to connect to Akka Cluster.
            </summary>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictConfig.Nodes">
            <summary>
            Address of all nodes in cluster.
            </summary>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictConfig.PageSize">
            <summary>
            Upload and Download page size.
            </summary>
        </member>
        <member name="P:NeoCortexApi.DistributedComputeLib.AkkaDistributedDictConfig.PartitionsPerNode">
            <summary>
            Number of partitions per node. Every partition at node will hold a number of elements.
            Note, a single actor implements a partition.
            </summary>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.HtmActor.InitializeColumns(NeoCortexApi.DistributedComputeLib.InitColumnsMsg)">
            <summary>
            Creates columns on the node.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.HtmActor.CreateAndConnectColumns(NeoCortexApi.DistributedComputeLib.ConnectAndConfigureColumnsMsg)">
            <summary>
            Initialize all columns inside of partition and connect them to sensory input.
            It returns the average connected span of the partition.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:NeoCortexApi.DistributedComputeLib.InMemoryDistributedDictionary`2">
            <summary>
            Distributes huge dictionary across mutliple dictionaries. Used mainly for testing purposes.
            Special case of this dictionary is with number of nodes = 1. In this case dictionary is redused 
            to a single dictionary, which corresponds original none-distributed implementation of SP and TM.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:NeoCortexApi.DistributedComputeLib.InMemoryDistributedDictionary`2.AddOrUpdate(System.Collections.Generic.ICollection{NeoCortexApi.Entities.KeyPair})">
            <summary>
            Adds list of objects to dictioanary.
            </summary>
            <param name="keyValuePairs"></param>
        </member>
        <member name="F:NeoCortexApi.DistributedComputeLib.InMemoryDistributedDictionary`2.currentDictIndex">
            <summary>
            Current dictionary list in enemerator.
            </summary>
        </member>
        <member name="F:NeoCortexApi.DistributedComputeLib.InMemoryDistributedDictionary`2.currentIndex">
            <summary>
            Current index in currentdictionary
            </summary>
        </member>
    </members>
</doc>
